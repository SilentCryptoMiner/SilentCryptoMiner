<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>